$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

@mixin media($breakpoint) {
	@if $breakpoint == "xs" {
		@media (min-width: map-get($grid-breakpoints, xs)) {
			@content;
		}
	} @else if $breakpoint == "sm" {
		@media (min-width: map-get($grid-breakpoints, sm)) {
			@content;
		}
	} @else if $breakpoint == "md" {
		@media (min-width: map-get($grid-breakpoints, md)) {
			@content;
		}
	} @else if $breakpoint == "lg" {
		@media (min-width: map-get($grid-breakpoints, lg)) {
			@content;
		}
	} @else if $breakpoint == "xl" {
		@media (min-width: map-get($grid-breakpoints, xl)) {
			@content;
		}
	} @else if $breakpoint == "xxl" {
		@media (min-width: map-get($grid-breakpoints, xxl)) {
			@content;
		}
	} @else {
		@error "Invalid breakpoint: #{$breakpoint}.";
	}
}	

@mixin container {
  width: 100%;
  margin: 0 auto;
  padding: 0 25px;
  
  @include media("sm") {
    max-width: calc(map-get($grid-breakpoints, sm) - 10px);
  }
  
  @include media("md") {
    max-width: calc(map-get($grid-breakpoints, md) - 10px);
  }
  
  @include media("lg") {
    max-width: calc(map-get($grid-breakpoints, lg) - 10px);
  }
  
  @include media("xl") {
    max-width: calc(map-get($grid-breakpoints, xl) - 10px);
  }
  
  @include media("xxl") {
    max-width: calc(map-get($grid-breakpoints, xxl) - 10px);
  }
}

.container {
  @include container;
}